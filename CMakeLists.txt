CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

FUNCTION(SET_PLATFORM ISA PLATFORM)
INCLUDE("${CMAKE_CURRENT_SOURCE_DIR}/platform/${ISA}/flags.cmake")
INCLUDE("${CMAKE_CURRENT_SOURCE_DIR}/platform/${ISA}/${PLATFORM}/flags.cmake")

SET(CUR_ISA ${ISA} PARENT_SCOPE)
SET(CUR_PLATFORM ${PLATFORM} PARENT_SCOPE)

SET(ISA_SRCS ${ISA_SRCS} PARENT_SCOPE)
SET(PLATFORM_SRCS ${PLATFORM_SRCS} PARENT_SCOPE)
SET(PLATFORM_LAYOUT "${CMAKE_CURRENT_SOURCE_DIR}/platform/${ISA}/${PLATFORM}/linker.ld" PARENT_SCOPE)
SET(PLATFORM_LINKER_FLAGS ${PLATFORM_LINKER_FLAGS} PARENT_SCOPE)
SET(PLATFORM_C_FLAGS ${PLATFORM_C_FLAGS} PARENT_SCOPE)
SET(PLATFORM_ASM_FLAGS ${PLATFORM_ASM_FLAGS} PARENT_SCOPE)
SET(PLATFORM_INCLUDE_DIRS ${PLATFORM_INCLUDE_DIRS} PARENT_SCOPE)
SET(PLATFORM_DEFINITIONS ${PLATFORM_DEFINITIONS} PARENT_SCOPE)

SET(ISA_LINKER_FLAGS ${ISA_LINKER_FLAGS} PARENT_SCOPE)
SET(ISA_INCLUDE_DIRS ${ISA_INCLUDE_DIRS} PARENT_SCOPE)
SET(ISA_C_FLAGS ${ISA_C_FLAGS} PARENT_SCOPE)
SET(ISA_ASM_FLAGS ${ISA_ASM_FLAGS} PARENT_SCOPE)
SET(ISA_ASM_COMPILER ${ISA_ASM_COMPILER} PARENT_SCOPE)
SET(ISA_LINKER_EXEC ${ISA_LINKER_EXEC} PARENT_SCOPE)
SET(ISA_DEFINITIONS ${ISA_DEFINITIONS} PARENT_SCOPE)

ENDFUNCTION(SET_PLATFORM)


SET_PLATFORM("x86_64" "pc")

SET(CELF_GEN "celf_gen")
ADD_DEFINITIONS(${ISA_DEFINITIONS} ${PLATFORM_DEFINITIONS} -D${CMAKE_BUILD_TYPE} -D_KERNEL_ -DISA_${CUR_ISA} -DPLATFORM_${CUR_PLATFORM} -DISA="${CUR_ISA}" -DPLATFORM="${CUR_PLATFORM}" -DISA_TYPES_H=${CMAKE_CURRENT_SOURCE_DIR}/common/inc/platform/${CUR_ISA}/types.h -DPLATFORM_TYPES_H=${CMAKE_CURRENT_SOURCE_DIR}/common/inc/platform/${CUR_ISA}/${CUR_PLATFORM}/types.h)
SET(CMAKE_C_FLAGS "${ISA_C_FLAGS} ${PLATFORM_C_FLAGS}") 
SET(CMAKE_ASM_COMPILER "${ISA_ASM_COMPILER}")  
SET(CMAKE_ASM_FLAGS "${ISA_ASM_FLAGS} ${PLATFORM_ASM_FLAGS}")
SET(CMAKE_C_LINK_EXECUTABLE "${ISA_LINKER_EXEC} -o <TARGET> <LINK_FLAGS> <OBJECTS>")
ENABLE_LANGUAGE(ASM)

INCLUDE_DIRECTORIES(SYSTEM "common/inc")
SET(LIBS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/libs")

#Build common
ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/common") 

#Build libs 
ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/libs/crypto")
ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/libs/miniz")
ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/libs/module_lib")
 

#Build modules
#ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/modules")

#Build kernel
ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/kernel")