CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

FIND_PROGRAM(CLANG clang)
SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_C_COMPILER ${CLANG})

PROJECT(CardinalOS)

FUNCTION(SET_PLATFORM ISA PLATFORM)
INCLUDE("${CMAKE_CURRENT_SOURCE_DIR}/inc/platform/${ISA}/flags.cmake")
INCLUDE("${CMAKE_CURRENT_SOURCE_DIR}/inc/platform/${ISA}/${PLATFORM}/flags.cmake")

SET(ISA_SRCS ${ISA_SRCS} PARENT_SCOPE)
SET(PLATFORM_SRCS ${PLATFORM_SRCS} PARENT_SCOPE)
SET(PLATFORM_LAYOUT "${CMAKE_CURRENT_SOURCE_DIR}/inc/platform/${ISA}/${PLATFORM}/linker.ld" PARENT_SCOPE)
SET(PLATFORM_LINKER_FLAGS ${PLATFORM_LINKER_FLAGS} PARENT_SCOPE)
SET(PLATFORM_INCLUDE_DIRS ${PLATFORM_INCLUDE_DIRS} PARENT_SCOPE)

SET(ISA_LINKER_FLAGS ${ISA_LINKER_FLAGS} PARENT_SCOPE)
SET(ISA_INCLUDE_DIRS ${ISA_INCLUDE_DIRS} PARENT_SCOPE)

SET(ISA_C_FLAGS ${ISA_C_FLAGS} PARENT_SCOPE)

SET(ISA_ASM_FLAGS ${ISA_ASM_FLAGS} PARENT_SCOPE)
SET(ISA_ASM_COMPILER ${ISA_ASM_COMPILER} PARENT_SCOPE)
ENDFUNCTION(SET_PLATFORM)

SET_PLATFORM("x86_64" "pc")

SET(CMAKE_C_FLAGS "${ISA_C_FLAGS}")

SET(CMAKE_ASM_COMPILER "${ISA_ASM_COMPILER}")
SET(CMAKE_ASM_FLAGS "${ISA_ASM_FLAGS}")

ENABLE_LANGUAGE(ASM)

FILE(GLOB COMMON_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/crypto/*.c" "${CMAKE_CURRENT_SOURCE_DIR}/src/elf/*.c" "${CMAKE_CURRENT_SOURCE_DIR}/src/linear_alloc/*.c")
SET(COMMON_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/inc")

INCLUDE_DIRECTORIES("${ISA_INCLUDE_DIRS}" "${PLATFORM_INCLUDE_DIRS}" "${COMMON_INCLUDE_DIRS}")

ADD_EXECUTABLE(kernel "${PLATFORM_SRCS}" "${ISA_SRCS}" "${COMMON_SRCS}")
SET_TARGET_PROPERTIES(kernel PROPERTIES LINK_FLAGS "-Wl,--script=${PLATFORM_LAYOUT} -Wl,--omagic ${ISA_LINKER_FLAGS} ${PLATFORM_LINKER_FLAGS}")
SET_TARGET_PROPERTIES(kernel PROPERTIES LINKER_LANGUAGE C)
